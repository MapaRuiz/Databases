-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-05-01 09:11:29 COT
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLESPACE estudiantes 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
FLASHBACK ON;

CREATE ROLE jpalacio NOT IDENTIFIED;

CREATE USER is360019 IDENTIFIED BY ACCOUNT UNLOCK ;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE is360019.alergia (
    alergia_id NUMBER(*, 0) NOT NULL,
    nombre     VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.alergia
TO jpalacio;

ALTER TABLE is360019.alergia
    ADD CONSTRAINT alergia_pk PRIMARY KEY ( alergia_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE is360019.alergia
    ADD CONSTRAINT alergia_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.ALERGIA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,ALERGIA_ID NUMBER (*,0) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.ALERGIA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.ALERGIA for each row 
 Declare 
  rec IS360019.ALERGIA_JN%ROWTYPE; 
  blank IS360019.ALERGIA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.ALERGIA_ID := :NEW.ALERGIA_ID; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.ALERGIA_ID := :OLD.ALERGIA_ID; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.ALERGIA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.alergias_paciente (
    alergia_id NUMBER(*, 0) NOT NULL,
    cedula     NUMBER(*, 0) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.alergias_paciente
TO jpalacio;

ALTER TABLE is360019.alergias_paciente
    ADD CONSTRAINT alergias_paciente_pk PRIMARY KEY ( alergia_id,
                                                      cedula )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.ALERGIAS_PACIENTE_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,ALERGIA_ID NUMBER (*,0) NOT NULL
 ,CEDULA NUMBER (*,0) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.ALERGIAS_PACIENTE_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.ALERGIAS_PACIENTE for each row 
 Declare 
  rec IS360019.ALERGIAS_PACIENTE_JN%ROWTYPE; 
  blank IS360019.ALERGIAS_PACIENTE_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.ALERGIA_ID := :NEW.ALERGIA_ID; 
      rec.CEDULA := :NEW.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.ALERGIA_ID := :OLD.ALERGIA_ID; 
      rec.CEDULA := :OLD.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.ALERGIAS_PACIENTE_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.cita (
    cita_id                 VARCHAR2(255 BYTE) NOT NULL,
    fecha_programacion      DATE NOT NULL,
    hora_programacion       VARCHAR2(255 BYTE) NOT NULL,
    fecha_realizacion       DATE NOT NULL,
    hora_realizacion        VARCHAR2(255 BYTE) NOT NULL,
    motivo_id               VARCHAR2(255 BYTE),
    cedula_paciente         NUMBER(*, 0),
    cedula_miembro_personal NUMBER(*, 0)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.cita
TO jpalacio;

ALTER TABLE is360019.cita
    ADD CONSTRAINT cita_pk PRIMARY KEY ( cita_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.CITA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CITA_ID VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_PROGRAMACION DATE NOT NULL
 ,HORA_PROGRAMACION VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_REALIZACION DATE NOT NULL
 ,HORA_REALIZACION VARCHAR2 (255 BYTE) NOT NULL
 ,MOTIVO_ID VARCHAR2 (255 BYTE)
 ,CEDULA_PACIENTE NUMBER (*,0)
 ,CEDULA_MIEMBRO_PERSONAL NUMBER (*,0)
 );

CREATE OR REPLACE TRIGGER IS360019.CITA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.CITA for each row 
 Declare 
  rec IS360019.CITA_JN%ROWTYPE; 
  blank IS360019.CITA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CITA_ID := :NEW.CITA_ID; 
      rec.FECHA_PROGRAMACION := :NEW.FECHA_PROGRAMACION; 
      rec.HORA_PROGRAMACION := :NEW.HORA_PROGRAMACION; 
      rec.FECHA_REALIZACION := :NEW.FECHA_REALIZACION; 
      rec.HORA_REALIZACION := :NEW.HORA_REALIZACION; 
      rec.MOTIVO_ID := :NEW.MOTIVO_ID; 
      rec.CEDULA_PACIENTE := :NEW.CEDULA_PACIENTE; 
      rec.CEDULA_MIEMBRO_PERSONAL := :NEW.CEDULA_MIEMBRO_PERSONAL; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CITA_ID := :OLD.CITA_ID; 
      rec.FECHA_PROGRAMACION := :OLD.FECHA_PROGRAMACION; 
      rec.HORA_PROGRAMACION := :OLD.HORA_PROGRAMACION; 
      rec.FECHA_REALIZACION := :OLD.FECHA_REALIZACION; 
      rec.HORA_REALIZACION := :OLD.HORA_REALIZACION; 
      rec.MOTIVO_ID := :OLD.MOTIVO_ID; 
      rec.CEDULA_PACIENTE := :OLD.CEDULA_PACIENTE; 
      rec.CEDULA_MIEMBRO_PERSONAL := :OLD.CEDULA_MIEMBRO_PERSONAL; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.CITA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.cobertura (
    cobertura_id VARCHAR2(255 BYTE) NOT NULL,
    tipo         VARCHAR2(255 BYTE) NOT NULL,
    monto_maximo FLOAT(126) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.cobertura
TO jpalacio;

ALTER TABLE is360019.cobertura
    ADD CONSTRAINT cobertura_pk PRIMARY KEY ( cobertura_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.COBERTURA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,COBERTURA_ID VARCHAR2 (255 BYTE) NOT NULL
 ,TIPO VARCHAR2 (255 BYTE) NOT NULL
 ,MONTO_MAXIMO FLOAT (126) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.COBERTURA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.COBERTURA for each row 
 Declare 
  rec IS360019.COBERTURA_JN%ROWTYPE; 
  blank IS360019.COBERTURA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.COBERTURA_ID := :NEW.COBERTURA_ID; 
      rec.TIPO := :NEW.TIPO; 
      rec.MONTO_MAXIMO := :NEW.MONTO_MAXIMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.COBERTURA_ID := :OLD.COBERTURA_ID; 
      rec.TIPO := :OLD.TIPO; 
      rec.MONTO_MAXIMO := :OLD.MONTO_MAXIMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.COBERTURA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.cobertura_poliza (
    cobertura_id  VARCHAR2(255 BYTE) NOT NULL,
    codigo_poliza VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.cobertura_poliza
TO jpalacio;

ALTER TABLE is360019.cobertura_poliza
    ADD CONSTRAINT cobertura_poliza_pk PRIMARY KEY ( cobertura_id,
                                                     codigo_poliza )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.COBERTURA_POLIZA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,COBERTURA_ID VARCHAR2 (255 BYTE) NOT NULL
 ,CODIGO_POLIZA VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.COBERTURA_POLIZA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.COBERTURA_POLIZA for each row 
 Declare 
  rec IS360019.COBERTURA_POLIZA_JN%ROWTYPE; 
  blank IS360019.COBERTURA_POLIZA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.COBERTURA_ID := :NEW.COBERTURA_ID; 
      rec.CODIGO_POLIZA := :NEW.CODIGO_POLIZA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.COBERTURA_ID := :OLD.COBERTURA_ID; 
      rec.CODIGO_POLIZA := :OLD.CODIGO_POLIZA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.COBERTURA_POLIZA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.compania_seguro (
    nit               VARCHAR2(255 BYTE) NOT NULL,
    nombre            VARCHAR2(255 BYTE) NOT NULL,
    direccion         VARCHAR2(255 BYTE) NOT NULL,
    ip                VARCHAR2(255 BYTE) NOT NULL,
    telefono_contacto VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.compania_seguro
TO jpalacio;

ALTER TABLE is360019.compania_seguro
    ADD CONSTRAINT compania_seguro_pk PRIMARY KEY ( nit )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.COMPANIA_SEGURO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,NIT VARCHAR2 (255 BYTE) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 ,DIRECCION VARCHAR2 (255 BYTE) NOT NULL
 ,IP VARCHAR2 (255 BYTE) NOT NULL
 ,TELEFONO_CONTACTO VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.COMPANIA_SEGURO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.COMPANIA_SEGURO for each row 
 Declare 
  rec IS360019.COMPANIA_SEGURO_JN%ROWTYPE; 
  blank IS360019.COMPANIA_SEGURO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.NIT := :NEW.NIT; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.DIRECCION := :NEW.DIRECCION; 
      rec.IP := :NEW.IP; 
      rec.TELEFONO_CONTACTO := :NEW.TELEFONO_CONTACTO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.NIT := :OLD.NIT; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.DIRECCION := :OLD.DIRECCION; 
      rec.IP := :OLD.IP; 
      rec.TELEFONO_CONTACTO := :OLD.TELEFONO_CONTACTO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.COMPANIA_SEGURO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.etapa (
    etapa_id            VARCHAR2(255 BYTE) NOT NULL,
    descripcion         VARCHAR2(255 BYTE) NOT NULL,
    fecha_final         DATE NOT NULL,
    motivo              VARCHAR2(255 BYTE) NOT NULL,
    fecha_procesamiento DATE NOT NULL,
    cedula              NUMBER(*, 0)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.etapa
TO jpalacio;

ALTER TABLE is360019.etapa
    ADD CONSTRAINT etapa_pk PRIMARY KEY ( etapa_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.ETAPA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,ETAPA_ID VARCHAR2 (255 BYTE) NOT NULL
 ,DESCRIPCION VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_FINAL DATE NOT NULL
 ,MOTIVO VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_PROCESAMIENTO DATE NOT NULL
 ,CEDULA NUMBER (*,0)
 );

CREATE OR REPLACE TRIGGER IS360019.ETAPA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.ETAPA for each row 
 Declare 
  rec IS360019.ETAPA_JN%ROWTYPE; 
  blank IS360019.ETAPA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.ETAPA_ID := :NEW.ETAPA_ID; 
      rec.DESCRIPCION := :NEW.DESCRIPCION; 
      rec.FECHA_FINAL := :NEW.FECHA_FINAL; 
      rec.MOTIVO := :NEW.MOTIVO; 
      rec.FECHA_PROCESAMIENTO := :NEW.FECHA_PROCESAMIENTO; 
      rec.CEDULA := :NEW.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.ETAPA_ID := :OLD.ETAPA_ID; 
      rec.DESCRIPCION := :OLD.DESCRIPCION; 
      rec.FECHA_FINAL := :OLD.FECHA_FINAL; 
      rec.MOTIVO := :OLD.MOTIVO; 
      rec.FECHA_PROCESAMIENTO := :OLD.FECHA_PROCESAMIENTO; 
      rec.CEDULA := :OLD.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.ETAPA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.etapa_reclamo_negado (
    codigo_reclamo VARCHAR2(255 BYTE) NOT NULL,
    etapa_id       VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.etapa_reclamo_negado
TO jpalacio;

ALTER TABLE is360019.etapa_reclamo_negado
    ADD CONSTRAINT etapa_reclamo_negado_pk PRIMARY KEY ( codigo_reclamo,
                                                         etapa_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.ETAPA_RECLAMO_NEGADO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 ,ETAPA_ID VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.ETAPA_RECLAMO_NEGADO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.ETAPA_RECLAMO_NEGADO for each row 
 Declare 
  rec IS360019.ETAPA_RECLAMO_NEGADO_JN%ROWTYPE; 
  blank IS360019.ETAPA_RECLAMO_NEGADO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.ETAPA_ID := :NEW.ETAPA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.ETAPA_ID := :OLD.ETAPA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.ETAPA_RECLAMO_NEGADO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.etapa_reclamo_parcial (
    codigo_reclamo VARCHAR2(255 BYTE) NOT NULL,
    etapa_id       VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.etapa_reclamo_parcial
TO jpalacio;

ALTER TABLE is360019.etapa_reclamo_parcial
    ADD CONSTRAINT etapa_reclamo_parcial_pk PRIMARY KEY ( codigo_reclamo,
                                                          etapa_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.ETAPA_RECLAMO_PARCIAL_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 ,ETAPA_ID VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.ETAPA_RECLAMO_PARCIAL_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.ETAPA_RECLAMO_PARCIAL for each row 
 Declare 
  rec IS360019.ETAPA_RECLAMO_PARCIAL_JN%ROWTYPE; 
  blank IS360019.ETAPA_RECLAMO_PARCIAL_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.ETAPA_ID := :NEW.ETAPA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.ETAPA_ID := :OLD.ETAPA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.ETAPA_RECLAMO_PARCIAL_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.miembro_personal (
    cedula    NUMBER(*, 0) NOT NULL,
    nombre    VARCHAR2(255 BYTE) NOT NULL,
    sexo      VARCHAR2(255 BYTE) NOT NULL,
    direccion VARCHAR2(255 BYTE) NOT NULL,
    cargo     VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE is360019.miembro_personal
    ADD CONSTRAINT chk_sexo CHECK ( sexo IN ( 'Femenino', 'Masculino' ) );

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.miembro_personal
TO jpalacio;

ALTER TABLE is360019.miembro_personal
    ADD CONSTRAINT miembro_personal_pk PRIMARY KEY ( cedula )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.MIEMBRO_PERSONAL_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CEDULA NUMBER (*,0) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 ,SEXO VARCHAR2 (255 BYTE) NOT NULL
 ,DIRECCION VARCHAR2 (255 BYTE) NOT NULL
 ,CARGO VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.MIEMBRO_PERSONAL_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.MIEMBRO_PERSONAL for each row 
 Declare 
  rec IS360019.MIEMBRO_PERSONAL_JN%ROWTYPE; 
  blank IS360019.MIEMBRO_PERSONAL_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CEDULA := :NEW.CEDULA; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.SEXO := :NEW.SEXO; 
      rec.DIRECCION := :NEW.DIRECCION; 
      rec.CARGO := :NEW.CARGO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CEDULA := :OLD.CEDULA; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.SEXO := :OLD.SEXO; 
      rec.DIRECCION := :OLD.DIRECCION; 
      rec.CARGO := :OLD.CARGO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.MIEMBRO_PERSONAL_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.motivo_cita (
    motivo_id   VARCHAR2(255 BYTE) NOT NULL,
    descripcion VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.motivo_cita
TO jpalacio;

ALTER TABLE is360019.motivo_cita
    ADD CONSTRAINT motivo_cita_pk PRIMARY KEY ( motivo_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE is360019.motivo_cita
    ADD CONSTRAINT motivo_cita_descripcion_un UNIQUE ( descripcion )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.MOTIVO_CITA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,MOTIVO_ID VARCHAR2 (255 BYTE) NOT NULL
 ,DESCRIPCION VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.MOTIVO_CITA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.MOTIVO_CITA for each row 
 Declare 
  rec IS360019.MOTIVO_CITA_JN%ROWTYPE; 
  blank IS360019.MOTIVO_CITA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.MOTIVO_ID := :NEW.MOTIVO_ID; 
      rec.DESCRIPCION := :NEW.DESCRIPCION; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.MOTIVO_ID := :OLD.MOTIVO_ID; 
      rec.DESCRIPCION := :OLD.DESCRIPCION; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.MOTIVO_CITA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.motivo_no_pago (
    codigo_motivo_no_pago VARCHAR2(255 BYTE) NOT NULL,
    nombre                VARCHAR2(255 BYTE) NOT NULL,
    descripcion           VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.motivo_no_pago
TO jpalacio;

ALTER TABLE is360019.motivo_no_pago
    ADD CONSTRAINT motivo_no_pago_pk PRIMARY KEY ( codigo_motivo_no_pago )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE is360019.motivo_no_pago
    ADD CONSTRAINT motivo_no_pago_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.MOTIVO_NO_PAGO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_MOTIVO_NO_PAGO VARCHAR2 (255 BYTE) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 ,DESCRIPCION VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.MOTIVO_NO_PAGO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.MOTIVO_NO_PAGO for each row 
 Declare 
  rec IS360019.MOTIVO_NO_PAGO_JN%ROWTYPE; 
  blank IS360019.MOTIVO_NO_PAGO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_MOTIVO_NO_PAGO := :NEW.CODIGO_MOTIVO_NO_PAGO; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.DESCRIPCION := :NEW.DESCRIPCION; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_MOTIVO_NO_PAGO := :OLD.CODIGO_MOTIVO_NO_PAGO; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.DESCRIPCION := :OLD.DESCRIPCION; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.MOTIVO_NO_PAGO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.paciente (
    cedula           NUMBER(*, 0) NOT NULL,
    nombre           VARCHAR2(255 BYTE) NOT NULL,
    sexo             VARCHAR2(255 BYTE) NOT NULL,
    direccion        VARCHAR2(255 BYTE) NOT NULL,
    fecha_nacimiento DATE NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE is360019.paciente
    ADD CONSTRAINT check_sexo CHECK ( sexo IN ( 'Femenino', 'Masculino' ) );

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.paciente
TO jpalacio;

ALTER TABLE is360019.paciente
    ADD CONSTRAINT paciente_pk PRIMARY KEY ( cedula )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.PACIENTE_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CEDULA NUMBER (*,0) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 ,SEXO VARCHAR2 (255 BYTE) NOT NULL
 ,DIRECCION VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_NACIMIENTO DATE NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.PACIENTE_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.PACIENTE for each row 
 Declare 
  rec IS360019.PACIENTE_JN%ROWTYPE; 
  blank IS360019.PACIENTE_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CEDULA := :NEW.CEDULA; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.SEXO := :NEW.SEXO; 
      rec.DIRECCION := :NEW.DIRECCION; 
      rec.FECHA_NACIMIENTO := :NEW.FECHA_NACIMIENTO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CEDULA := :OLD.CEDULA; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.SEXO := :OLD.SEXO; 
      rec.DIRECCION := :OLD.DIRECCION; 
      rec.FECHA_NACIMIENTO := :OLD.FECHA_NACIMIENTO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.PACIENTE_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.poliza (
    codigo_poliza  VARCHAR2(255 BYTE) NOT NULL,
    nit            VARCHAR2(255 BYTE),
    cedula         NUMBER(*, 0),
    codigo_reclamo VARCHAR2(255 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.poliza
TO jpalacio;

ALTER TABLE is360019.poliza
    ADD CONSTRAINT poliza_pk PRIMARY KEY ( codigo_poliza )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.POLIZA_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_POLIZA VARCHAR2 (255 BYTE) NOT NULL
 ,NIT VARCHAR2 (255 BYTE)
 ,CEDULA NUMBER (*,0)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE)
 );

CREATE OR REPLACE TRIGGER IS360019.POLIZA_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.POLIZA for each row 
 Declare 
  rec IS360019.POLIZA_JN%ROWTYPE; 
  blank IS360019.POLIZA_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_POLIZA := :NEW.CODIGO_POLIZA; 
      rec.NIT := :NEW.NIT; 
      rec.CEDULA := :NEW.CEDULA; 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_POLIZA := :OLD.CODIGO_POLIZA; 
      rec.NIT := :OLD.NIT; 
      rec.CEDULA := :OLD.CEDULA; 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.POLIZA_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.reclamo (
    codigo_reclamo  VARCHAR2(255 BYTE) NOT NULL,
    fecha_accion    DATE NOT NULL,
    fecha_reclamo   DATE NOT NULL,
    monto_reclamado FLOAT(126) NOT NULL,
    cita_id         VARCHAR2(255 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.reclamo
TO jpalacio;

ALTER TABLE is360019.reclamo
    ADD CONSTRAINT reclamo_pk PRIMARY KEY ( codigo_reclamo )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.RECLAMO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 ,FECHA_ACCION DATE NOT NULL
 ,FECHA_RECLAMO DATE NOT NULL
 ,MONTO_RECLAMADO FLOAT (126) NOT NULL
 ,CITA_ID VARCHAR2 (255 BYTE)
 );

CREATE OR REPLACE TRIGGER IS360019.RECLAMO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.RECLAMO for each row 
 Declare 
  rec IS360019.RECLAMO_JN%ROWTYPE; 
  blank IS360019.RECLAMO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.FECHA_ACCION := :NEW.FECHA_ACCION; 
      rec.FECHA_RECLAMO := :NEW.FECHA_RECLAMO; 
      rec.MONTO_RECLAMADO := :NEW.MONTO_RECLAMADO; 
      rec.CITA_ID := :NEW.CITA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.FECHA_ACCION := :OLD.FECHA_ACCION; 
      rec.FECHA_RECLAMO := :OLD.FECHA_RECLAMO; 
      rec.MONTO_RECLAMADO := :OLD.MONTO_RECLAMADO; 
      rec.CITA_ID := :OLD.CITA_ID; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.RECLAMO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.reclamo_aprobado (
    codigo_reclamo VARCHAR2(255 BYTE) NOT NULL,
    monto_pagado   FLOAT(126)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.reclamo_aprobado
TO jpalacio;

ALTER TABLE is360019.reclamo_aprobado
    ADD CONSTRAINT reclamo_aprobado_pk PRIMARY KEY ( codigo_reclamo )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.RECLAMO_APROBADO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 ,MONTO_PAGADO FLOAT (126)
 );

CREATE OR REPLACE TRIGGER IS360019.RECLAMO_APROBADO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.RECLAMO_APROBADO for each row 
 Declare 
  rec IS360019.RECLAMO_APROBADO_JN%ROWTYPE; 
  blank IS360019.RECLAMO_APROBADO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.MONTO_PAGADO := :NEW.MONTO_PAGADO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.MONTO_PAGADO := :OLD.MONTO_PAGADO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.RECLAMO_APROBADO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.reclamo_negado (
    codigo_reclamo VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.reclamo_negado
TO jpalacio;

ALTER TABLE is360019.reclamo_negado
    ADD CONSTRAINT reclamo_negado_pk PRIMARY KEY ( codigo_reclamo )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.RECLAMO_NEGADO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.RECLAMO_NEGADO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.RECLAMO_NEGADO for each row 
 Declare 
  rec IS360019.RECLAMO_NEGADO_JN%ROWTYPE; 
  blank IS360019.RECLAMO_NEGADO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.RECLAMO_NEGADO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.reclamo_parcial (
    codigo_reclamo        VARCHAR2(255 BYTE) NOT NULL,
    monto_pagado          FLOAT(126) NOT NULL,
    fecha_pago_parcial    DATE NOT NULL,
    codigo_motivo_no_pago VARCHAR2(255 BYTE)
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.reclamo_parcial
TO jpalacio;

ALTER TABLE is360019.reclamo_parcial
    ADD CONSTRAINT reclamo_parcial_pk PRIMARY KEY ( codigo_reclamo )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.RECLAMO_PARCIAL_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO VARCHAR2 (255 BYTE) NOT NULL
 ,MONTO_PAGADO FLOAT (126) NOT NULL
 ,FECHA_PAGO_PARCIAL DATE NOT NULL
 ,CODIGO_MOTIVO_NO_PAGO VARCHAR2 (255 BYTE)
 );

CREATE OR REPLACE TRIGGER IS360019.RECLAMO_PARCIAL_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.RECLAMO_PARCIAL for each row 
 Declare 
  rec IS360019.RECLAMO_PARCIAL_JN%ROWTYPE; 
  blank IS360019.RECLAMO_PARCIAL_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO := :NEW.CODIGO_RECLAMO; 
      rec.MONTO_PAGADO := :NEW.MONTO_PAGADO; 
      rec.FECHA_PAGO_PARCIAL := :NEW.FECHA_PAGO_PARCIAL; 
      rec.CODIGO_MOTIVO_NO_PAGO := :NEW.CODIGO_MOTIVO_NO_PAGO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO := :OLD.CODIGO_RECLAMO; 
      rec.MONTO_PAGADO := :OLD.MONTO_PAGADO; 
      rec.FECHA_PAGO_PARCIAL := :OLD.FECHA_PAGO_PARCIAL; 
      rec.CODIGO_MOTIVO_NO_PAGO := :OLD.CODIGO_MOTIVO_NO_PAGO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.RECLAMO_PARCIAL_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.reclamos_consecutivos (
    codigo_reclamo_anterior  VARCHAR2(255 BYTE) NOT NULL,
    codigo_reclamo_siguiente VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

ALTER TABLE is360019.reclamos_consecutivos
    ADD CONSTRAINT reclamos_consecutivos_pk PRIMARY KEY ( codigo_reclamo_anterior,
                                                          codigo_reclamo_siguiente )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.RECLAMOS_CONSECUTIVOS_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CODIGO_RECLAMO_ANTERIOR VARCHAR2 (255 BYTE) NOT NULL
 ,CODIGO_RECLAMO_SIGUIENTE VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.RECLAMOS_CONSECUTIVOS_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.RECLAMOS_CONSECUTIVOS for each row 
 Declare 
  rec IS360019.RECLAMOS_CONSECUTIVOS_JN%ROWTYPE; 
  blank IS360019.RECLAMOS_CONSECUTIVOS_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CODIGO_RECLAMO_ANTERIOR := :NEW.CODIGO_RECLAMO_ANTERIOR; 
      rec.CODIGO_RECLAMO_SIGUIENTE := :NEW.CODIGO_RECLAMO_SIGUIENTE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CODIGO_RECLAMO_ANTERIOR := :OLD.CODIGO_RECLAMO_ANTERIOR; 
      rec.CODIGO_RECLAMO_SIGUIENTE := :OLD.CODIGO_RECLAMO_SIGUIENTE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.RECLAMOS_CONSECUTIVOS_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.titulo (
    titulo_id VARCHAR2(255 BYTE) NOT NULL,
    nombre    VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.titulo
TO jpalacio;

ALTER TABLE is360019.titulo
    ADD CONSTRAINT titulo_pk PRIMARY KEY ( titulo_id )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );

ALTER TABLE is360019.titulo
    ADD CONSTRAINT titulo_nombre_un UNIQUE ( nombre )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.TITULO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,TITULO_ID VARCHAR2 (255 BYTE) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.TITULO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.TITULO for each row 
 Declare 
  rec IS360019.TITULO_JN%ROWTYPE; 
  blank IS360019.TITULO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.TITULO_ID := :NEW.TITULO_ID; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.TITULO_ID := :OLD.TITULO_ID; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.TITULO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.titulo_miembro (
    titulo_id VARCHAR2(255 BYTE) NOT NULL,
    cedula    NUMBER(*, 0) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.titulo_miembro
TO jpalacio;

ALTER TABLE is360019.titulo_miembro
    ADD CONSTRAINT titulo_miembro_pk PRIMARY KEY ( titulo_id,
                                                   cedula )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.TITULO_MIEMBRO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,TITULO_ID VARCHAR2 (255 BYTE) NOT NULL
 ,CEDULA NUMBER (*,0) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.TITULO_MIEMBRO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.TITULO_MIEMBRO for each row 
 Declare 
  rec IS360019.TITULO_MIEMBRO_JN%ROWTYPE; 
  blank IS360019.TITULO_MIEMBRO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.TITULO_ID := :NEW.TITULO_ID; 
      rec.CEDULA := :NEW.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.TITULO_ID := :OLD.TITULO_ID; 
      rec.CEDULA := :OLD.CEDULA; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.TITULO_MIEMBRO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.vinculo (
    cedula   NUMBER(*, 0) NOT NULL,
    nombre   VARCHAR2(255 BYTE) NOT NULL,
    telefono NUMBER(*, 0) NOT NULL,
    tipo     VARCHAR2(255 BYTE) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.vinculo
TO jpalacio;

ALTER TABLE is360019.vinculo
    ADD CONSTRAINT vinculo_pk PRIMARY KEY ( cedula )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.VINCULO_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CEDULA NUMBER (*,0) NOT NULL
 ,NOMBRE VARCHAR2 (255 BYTE) NOT NULL
 ,TELEFONO NUMBER (*,0) NOT NULL
 ,TIPO VARCHAR2 (255 BYTE) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.VINCULO_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.VINCULO for each row 
 Declare 
  rec IS360019.VINCULO_JN%ROWTYPE; 
  blank IS360019.VINCULO_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CEDULA := :NEW.CEDULA; 
      rec.NOMBRE := :NEW.NOMBRE; 
      rec.TELEFONO := :NEW.TELEFONO; 
      rec.TIPO := :NEW.TIPO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CEDULA := :OLD.CEDULA; 
      rec.NOMBRE := :OLD.NOMBRE; 
      rec.TELEFONO := :OLD.TELEFONO; 
      rec.TIPO := :OLD.TIPO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.VINCULO_JN VALUES rec; 
  END; 
  /CREATE TABLE is360019.vinculo_paciente (
    cedula_paciente NUMBER(*, 0) NOT NULL,
    cedula_vinculo  NUMBER(*, 0) NOT NULL
)
PCTFREE 10 PCTUSED 40 TABLESPACE estudiantes LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    )
NO INMEMORY;

GRANT ALTER, DELETE, INDEX, INSERT, SELECT, UPDATE, REFERENCES, READ, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON is360019.vinculo_paciente
TO jpalacio;

ALTER TABLE is360019.vinculo_paciente
    ADD CONSTRAINT vinculo_paciente_pk PRIMARY KEY ( cedula_paciente,
                                                     cedula_vinculo )
        USING INDEX PCTFREE 10 INITRANS 2 TABLESPACE estudiantes
LOGGING
    STORAGE ( INITIAL 65536 NEXT 1048576 PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS 2147483645 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT
    );


CREATE TABLE IS360019.VINCULO_PACIENTE_JN
 (JN_OPERATION CHAR(3) NOT NULL
 ,JN_ORACLE_USER VARCHAR2(30) NOT NULL
 ,JN_DATETIME DATE NOT NULL
 ,JN_NOTES VARCHAR2(240)
 ,JN_APPLN VARCHAR2(35)
 ,JN_SESSION NUMBER(38)
 ,CEDULA_PACIENTE NUMBER (*,0) NOT NULL
 ,CEDULA_VINCULO NUMBER (*,0) NOT NULL
 );

CREATE OR REPLACE TRIGGER IS360019.VINCULO_PACIENTE_JNtrg
  AFTER 
  INSERT OR 
  UPDATE OR 
  DELETE ON IS360019.VINCULO_PACIENTE for each row 
 Declare 
  rec IS360019.VINCULO_PACIENTE_JN%ROWTYPE; 
  blank IS360019.VINCULO_PACIENTE_JN%ROWTYPE; 
  BEGIN 
    rec := blank; 
    IF INSERTING OR UPDATING THEN 
      rec.CEDULA_PACIENTE := :NEW.CEDULA_PACIENTE; 
      rec.CEDULA_VINCULO := :NEW.CEDULA_VINCULO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      IF INSERTING THEN 
        rec.JN_OPERATION := 'INS'; 
      ELSIF UPDATING THEN 
        rec.JN_OPERATION := 'UPD'; 
      END IF; 
    ELSIF DELETING THEN 
      rec.CEDULA_PACIENTE := :OLD.CEDULA_PACIENTE; 
      rec.CEDULA_VINCULO := :OLD.CEDULA_VINCULO; 
      rec.JN_DATETIME := SYSDATE; 
      rec.JN_ORACLE_USER := SYS_CONTEXT ('USERENV', 'SESSION_USER'); 
      rec.JN_APPLN := SYS_CONTEXT ('USERENV', 'MODULE'); 
      rec.JN_SESSION := SYS_CONTEXT ('USERENV', 'SESSIONID'); 
      rec.JN_OPERATION := 'DEL'; 
    END IF; 
    INSERT into IS360019.VINCULO_PACIENTE_JN VALUES rec; 
  END; 
  /ALTER TABLE is360019.titulo_miembro
    ADD FOREIGN KEY ( titulo_id )
        REFERENCES is360019.titulo ( titulo_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.titulo_miembro
    ADD FOREIGN KEY ( cedula )
        REFERENCES is360019.miembro_personal ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.etapa
    ADD FOREIGN KEY ( cedula )
        REFERENCES is360019.miembro_personal ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.vinculo_paciente
    ADD FOREIGN KEY ( cedula_paciente )
        REFERENCES is360019.paciente ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.vinculo_paciente
    ADD FOREIGN KEY ( cedula_vinculo )
        REFERENCES is360019.vinculo ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.alergias_paciente
    ADD FOREIGN KEY ( alergia_id )
        REFERENCES is360019.alergia ( alergia_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.alergias_paciente
    ADD FOREIGN KEY ( cedula )
        REFERENCES is360019.paciente ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.cita
    ADD FOREIGN KEY ( motivo_id )
        REFERENCES is360019.motivo_cita ( motivo_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.cita
    ADD FOREIGN KEY ( cedula_paciente )
        REFERENCES is360019.paciente ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.cita
    ADD FOREIGN KEY ( cedula_miembro_personal )
        REFERENCES is360019.miembro_personal ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamo
    ADD FOREIGN KEY ( cita_id )
        REFERENCES is360019.cita ( cita_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamos_consecutivos
    ADD FOREIGN KEY ( codigo_reclamo_anterior )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamos_consecutivos
    ADD FOREIGN KEY ( codigo_reclamo_siguiente )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamo_aprobado
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamo_parcial
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamo_parcial
    ADD FOREIGN KEY ( codigo_motivo_no_pago )
        REFERENCES is360019.motivo_no_pago ( codigo_motivo_no_pago )
    NOT DEFERRABLE;

ALTER TABLE is360019.reclamo_negado
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.etapa_reclamo_parcial
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo_parcial ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.etapa_reclamo_parcial
    ADD FOREIGN KEY ( etapa_id )
        REFERENCES is360019.etapa ( etapa_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.etapa_reclamo_negado
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo_negado ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.etapa_reclamo_negado
    ADD FOREIGN KEY ( etapa_id )
        REFERENCES is360019.etapa ( etapa_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.poliza
    ADD FOREIGN KEY ( nit )
        REFERENCES is360019.compania_seguro ( nit )
    NOT DEFERRABLE;

ALTER TABLE is360019.poliza
    ADD FOREIGN KEY ( cedula )
        REFERENCES is360019.paciente ( cedula )
    NOT DEFERRABLE;

ALTER TABLE is360019.poliza
    ADD FOREIGN KEY ( codigo_reclamo )
        REFERENCES is360019.reclamo ( codigo_reclamo )
    NOT DEFERRABLE;

ALTER TABLE is360019.cobertura_poliza
    ADD FOREIGN KEY ( cobertura_id )
        REFERENCES is360019.cobertura ( cobertura_id )
    NOT DEFERRABLE;

ALTER TABLE is360019.cobertura_poliza
    ADD FOREIGN KEY ( codigo_poliza )
        REFERENCES is360019.poliza ( codigo_poliza )
    NOT DEFERRABLE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            23
-- CREATE INDEX                             0
-- ALTER TABLE                             55
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              1
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 1
